name: clean

env:
  CACHE_FILES: 'translation/cache/zh/spells/*.json translation/cache/zh/class/*.json translation/cache/zh/*.json translation/cache/zh/book/*.json translation/cache/zh/adventure/*.json translation/cache/zh/bestiary/*.json'
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      cache:
        description: 'Cache files'
        required: True
        default: ${CACHE_FILES}
  schedule:
    - cron: "00 10,23 * * *"

concurrency:
  group: "translation"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  clean:
    strategy:
      max-parallel: 1
      matrix:
        language: ['zh']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: 'main'
    - uses: actions/setup-python@v3
      with:
        python-version: '3.10.13'
        architecture: 'x64'
    - name: Clean
      continue-on-error: true
      run: |
           cd $GITHUB_WORKSPACE
           python ./translation/clean.py $CACHE_FILES
    - name: Save results
      continue-on-error: true
      run: |
           git config user.name "Automatic translator"
           git config user.email "<>"
           git add -A
           git commit -m 'automatic translation'
           git status
           git checkout HEAD .
           git pull --rebase --autostash
           git push origin main || true
           # Try again with a short delay in case it fails (conflicting pushes)
           sleep $((1 + $RANDOM % 10 * 10))
           git pull --rebase --autostash
           git push origin main || true
           #sleep $((1 + $RANDOM % 10 * 10))
           #git pull --rebase --autostash
           #git push origin translations || true
           #sleep $((1 + $RANDOM % 10 * 10))
           #git pull --rebase --autostash
           #git push origin translations || true
 
